{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport { auth } from \"../../firebase\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedEvent = _useState4[0],\n    setSelectedEvent = _useState4[1];\n  var navigation = useNavigation();\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.navigate(\"Home\");\n    });\n  };\n  var events = [{\n    title: 'Event 1',\n    description: 'This is event 1',\n    date: 'May 20, 2023'\n  }, {\n    title: 'Event 2',\n    description: 'This is event 2',\n    date: 'June 1, 2023'\n  }, {\n    title: 'Event 3',\n    description: 'This is event 3',\n    date: 'July 15, 2023'\n  }];\n  var handleEventPress = function handleEventPress(event) {\n    setSelectedEvent(event);\n    setModalVisible(true);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.profileContainer,\n      children: [_jsx(Image, {\n        source: {\n          uri: 'https://randomuser.me/api/portraits/men/1.jpg'\n        },\n        style: styles.profileImage\n      }), _jsx(Text, {\n        style: styles.username,\n        children: \"John Doe\"\n      }), _jsxs(TouchableOpacity, {\n        style: styles.messageButton,\n        children: [_jsx(Text, {\n          style: styles.messageButtonText,\n          children: \"Message\"\n        }), _jsx(Text, {\n          style: styles.messageButtonText,\n          children: \"Sign Out\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.eventsContainer,\n      children: [_jsx(Text, {\n        style: styles.eventsHeader,\n        children: \"Events Created\"\n      }), events.map(function (event, index) {\n        return _jsxs(TouchableOpacity, {\n          style: styles.eventBox,\n          onPress: function onPress() {\n            return handleEventPress(event);\n          },\n          children: [_jsx(Text, {\n            style: styles.eventTitle,\n            children: event.title\n          }), _jsx(Text, {\n            style: styles.eventDate,\n            children: event.date\n          })]\n        }, index);\n      })]\n    }), selectedEvent && _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n        setSelectedEvent(null);\n      },\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: selectedEvent.title\n          }), _jsx(Text, {\n            style: styles.modalDescription,\n            children: selectedEvent.description\n          }), _jsx(TouchableOpacity, {\n            style: styles.messageButton,\n            children: _jsx(Text, {\n              style: styles.messageButtonText,\n              children: \"Message\"\n            })\n          }), _jsx(TouchableHighlight, {\n            style: _objectSpread(_objectSpread({}, styles.modalCloseButton), {}, {\n              backgroundColor: '#2196F3'\n            }),\n            onPress: function onPress() {\n              setModalVisible(!modalVisible);\n              setSelectedEvent(null);\n            },\n            children: _jsx(Text, {\n              style: styles.modalCloseButtonText,\n              children: \"Close\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Image","TouchableOpacity","Modal","TouchableHighlight","styles","auth","useNavigation","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","selectedEvent","setSelectedEvent","navigation","handleSignOut","signOut","then","navigate","events","title","description","date","handleEventPress","event","style","container","children","profileContainer","source","uri","profileImage","username","messageButton","messageButtonText","eventsContainer","eventsHeader","map","index","eventBox","onPress","eventTitle","eventDate","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","modalTitle","modalDescription","_objectSpread","modalCloseButton","backgroundColor","modalCloseButtonText"],"sources":["C:/Users/Onur/event-planner/screens/Profile/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity, Modal, TouchableHighlight } from 'react-native';\r\nimport styles from './styles';\r\nimport { auth } from '../../firebase';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst ProfileScreen = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const navigation = useNavigation()\r\n\r\n  const handleSignOut = () =>\r\n  {\r\n    auth\r\n    .signOut()\r\n    .then(() => {\r\n      navigation.navigate(\"Home\")\r\n    })\r\n  } \r\n\r\n  const events = [\r\n    {\r\n      title: 'Event 1',\r\n      description: 'This is event 1',\r\n      date: 'May 20, 2023',\r\n    },\r\n    {\r\n      title: 'Event 2',\r\n      description: 'This is event 2',\r\n      date: 'June 1, 2023',\r\n    },\r\n    {\r\n      title: 'Event 3',\r\n      description: 'This is event 3',\r\n      date: 'July 15, 2023',\r\n    },\r\n  ];\r\n\r\n  const handleEventPress = (event) => {\r\n    setSelectedEvent(event);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.profileContainer}>\r\n        <Image source={{ uri: 'https://randomuser.me/api/portraits/men/1.jpg' }} style={styles.profileImage} />\r\n        <Text style={styles.username}>John Doe</Text>\r\n        <TouchableOpacity style={styles.messageButton}>\r\n          <Text style={styles.messageButtonText}>Message</Text>\r\n          <Text style={styles.messageButtonText}>Sign Out</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.eventsContainer}>\r\n        <Text style={styles.eventsHeader}>Events Created</Text>\r\n        {events.map((event, index) => (\r\n          <TouchableOpacity key={index} style={styles.eventBox} onPress={() => handleEventPress(event)}>\r\n            <Text style={styles.eventTitle}>{event.title}</Text>\r\n            <Text style={styles.eventDate}>{event.date}</Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n      {selectedEvent && (\r\n        <Modal\r\n          animationType=\"slide\"\r\n          transparent={true}\r\n          visible={modalVisible}\r\n          onRequestClose={() => {\r\n            setModalVisible(!modalVisible);\r\n            setSelectedEvent(null);\r\n          }}\r\n        >\r\n          <View style={styles.modalContainer}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>{selectedEvent.title}</Text>\r\n              <Text style={styles.modalDescription}>{selectedEvent.description}</Text>\r\n              <TouchableOpacity style={styles.messageButton}>\r\n                <Text style={styles.messageButtonText}>Message</Text>\r\n              </TouchableOpacity>\r\n              <TouchableHighlight\r\n                style={{ ...styles.modalCloseButton, backgroundColor: '#2196F3' }}\r\n                onPress={() => {\r\n                  setModalVisible(!modalVisible);\r\n                  setSelectedEvent(null);\r\n                }}\r\n              >\r\n                <Text style={styles.modalCloseButtonText}>Close</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}