{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport CreateEventScreen from \"../screens/CreateEvent/CreateEvent\";\nimport ProfileScreen from \"./ProfileScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home';\n            return _jsx(AntDesign, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Create Event') {\n            iconName = focused ? 'add-circle' : 'add-circle-outline';\n            return _jsx(MaterialIcons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'user' : 'user';\n            return _jsx(AntDesign, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'blue',\n      inactiveTintColor: 'gray'\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Create Event\",\n      component: CreateEventScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nexport default TabNavigator;","map":{"version":3,"names":["React","createBottomTabNavigator","AntDesign","MaterialIcons","HomeScreen","CreateEventScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Tab","TabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarOptions","activeTintColor","inactiveTintColor","children","Screen","component"],"sources":["C:/Users/Onur/event-planner/components/TabNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\r\n\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport CreateEventScreen from '../screens/CreateEvent/CreateEvent';\r\nimport ProfileScreen from './ProfileScreen';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst TabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Home') {\r\n            iconName = focused ? 'home' : 'home';\r\n            return <AntDesign name={iconName} size={size} color={color} />;\r\n          } else if (route.name === 'Create Event') {\r\n            iconName = focused ? 'add-circle' : 'add-circle-outline';\r\n            return <MaterialIcons name={iconName} size={size} color={color} />;\r\n          } else if (route.name === 'Profile') {\r\n            iconName = focused ? 'user' : 'user';\r\n            return <AntDesign name={iconName} size={size} color={color} />;\r\n          }\r\n        },\r\n      })}\r\n      tabBarOptions={{\r\n        activeTintColor: 'blue',\r\n        inactiveTintColor: 'gray',\r\n      }}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n      <Tab.Screen name=\"Create Event\" component={CreateEventScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nexport default TabNavigator;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,SAAS,EAAEC,aAAa,QAAQ,oBAAoB;AAE7D,OAAOC,UAAU;AACjB,OAAOC,iBAAiB;AACxB,OAAOC,aAAa;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,GAAG,GAAGV,wBAAwB,CAAC,CAAC;AAEtC,IAAMW,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,OACEF,KAAA,CAACC,GAAG,CAACE,SAAS;IACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAQ;QAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;UAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACjC,IAAIC,QAAQ;UAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;YACzBD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,MAAM;YACpC,OAAOX,IAAA,CAACN,SAAS;cAACqB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAChE,CAAC,MAAM,IAAIJ,KAAK,CAACO,IAAI,KAAK,cAAc,EAAE;YACxCD,QAAQ,GAAGH,OAAO,GAAG,YAAY,GAAG,oBAAoB;YACxD,OAAOX,IAAA,CAACL,aAAa;cAACoB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UACpE,CAAC,MAAM,IAAIJ,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;YACnCD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,MAAM;YACpC,OAAOX,IAAA,CAACN,SAAS;cAACqB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAChE;QACF;MACF,CAAC;IAAA,CAAE;IACHI,aAAa,EAAE;MACbC,eAAe,EAAE,MAAM;MACvBC,iBAAiB,EAAE;IACrB,CAAE;IAAAC,QAAA,GAEFnB,IAAA,CAACG,GAAG,CAACiB,MAAM;MAACL,IAAI,EAAC,MAAM;MAACM,SAAS,EAAEzB;IAAW,CAAE,CAAC,EACjDI,IAAA,CAACG,GAAG,CAACiB,MAAM;MAACL,IAAI,EAAC,cAAc;MAACM,SAAS,EAAExB;IAAkB,CAAE,CAAC,EAChEG,IAAA,CAACG,GAAG,CAACiB,MAAM;MAACL,IAAI,EAAC,SAAS;MAACM,SAAS,EAAEvB;IAAc,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEpB,CAAC;AAED,eAAeM,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}