{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { GoogleSignin, GoogleSigninButton } from '@react-native-google-signin/google-signin';\nimport auth from '@react-native-firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var navigation = useNavigation();\n  var handleRegister = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        yield auth().createUserWithEmailAndPassword(email, password);\n        console.log('User account created & signed in!');\n        navigation.navigate('Home');\n      } catch (error) {\n        if (error.code === 'auth/email-already-in-use') {\n          console.log('That email address is already in use!');\n        }\n        if (error.code === 'auth/invalid-email') {\n          console.log('That email address is invalid!');\n        }\n        console.error(error);\n      }\n    });\n    return function handleRegister() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleGoogleSignIn = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var _yield$GoogleSignin$s = yield GoogleSignin.signIn(),\n          idToken = _yield$GoogleSignin$s.idToken;\n        var googleCredential = auth.GoogleAuthProvider.credential(idToken);\n        yield auth().signInWithCredential(googleCredential);\n        console.log('Google user signed in!');\n        navigation.navigate('Home');\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function handleGoogleSignIn() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Register Screen\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      secureTextEntry: true\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Register\"\n      })\n    }), _jsx(GoogleSigninButton, {\n      style: styles.googleButton,\n      size: GoogleSigninButton.Size.Wide,\n      color: GoogleSigninButton.Color.Light,\n      onPress: handleGoogleSignIn\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 30\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5\n  },\n  button: {\n    width: '80%',\n    padding: 10,\n    backgroundColor: '#2196F3',\n    borderRadius: 5,\n    marginBottom: 10,\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  googleButton: {\n    width: '80%',\n    height: 48,\n    marginBottom: 10\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","StyleSheet","View","Text","TextInput","TouchableOpacity","useNavigation","GoogleSignin","GoogleSigninButton","auth","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","navigation","handleRegister","_ref","_asyncToGenerator","createUserWithEmailAndPassword","console","log","navigate","error","code","apply","arguments","handleGoogleSignIn","_ref2","_yield$GoogleSignin$s","signIn","idToken","googleCredential","GoogleAuthProvider","credential","signInWithCredential","style","styles","container","children","title","input","placeholder","value","onChangeText","text","secureTextEntry","button","onPress","buttonText","googleButton","size","Size","Wide","color","Color","Light","create","flex","alignItems","justifyContent","fontSize","marginBottom","width","padding","borderWidth","borderColor","borderRadius","backgroundColor","fontWeight","height"],"sources":["C:/Users/Onur/event-planner/screens/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, TextInput, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { GoogleSignin, GoogleSigninButton } from '@react-native-google-signin/google-signin';\r\nimport auth from '@react-native-firebase/auth';\r\n\r\nconst RegisterScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      await auth().createUserWithEmailAndPassword(email, password);\r\n      console.log('User account created & signed in!');\r\n      navigation.navigate('Home');\r\n    } catch (error) {\r\n      if (error.code === 'auth/email-already-in-use') {\r\n        console.log('That email address is already in use!');\r\n      }\r\n\r\n      if (error.code === 'auth/invalid-email') {\r\n        console.log('That email address is invalid!');\r\n      }\r\n\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      // Get the user's ID token\r\n      const { idToken } = await GoogleSignin.signIn();\r\n\r\n      // Create a Google credential from the ID token\r\n      const googleCredential = auth.GoogleAuthProvider.credential(idToken);\r\n\r\n      // Sign in with the Google credential\r\n      await auth().signInWithCredential(googleCredential);\r\n\r\n      console.log('Google user signed in!');\r\n      navigation.navigate('Home');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Register Screen</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={(text) => setEmail(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        secureTextEntry\r\n      />\r\n      <TouchableOpacity style={styles.button} onPress={handleRegister}>\r\n        <Text style={styles.buttonText}>Register</Text>\r\n      </TouchableOpacity>\r\n      <GoogleSigninButton\r\n        style={styles.googleButton}\r\n        size={GoogleSigninButton.Size.Wide}\r\n        color={GoogleSigninButton.Color.Light}\r\n        onPress={handleGoogleSignIn}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    marginBottom: 30,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    width: '80%',\r\n    padding: 10,\r\n    backgroundColor: '#2196F3',\r\n    borderRadius: 5,\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n  },\r\n  googleButton: {\r\n    width: '80%',\r\n    height: 48,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}