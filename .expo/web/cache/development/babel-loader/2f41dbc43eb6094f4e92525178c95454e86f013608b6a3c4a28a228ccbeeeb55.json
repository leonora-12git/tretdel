{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Register from \"./screens/Register\";\nimport LogIn from \"./screens/LogIn\";\nimport Events from \"./screens/Events/Events\";\nimport Message from \"./screens/Message/Message\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport TabNavigator from \"./components/TabNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD8GM7Uhgu953-1Kuk8bWirSIrZ3YV2Pfo\",\n  authDomain: \"event-planner-7514c.firebaseapp.com\",\n  projectId: \"event-planner-7514c\",\n  storageBucket: \"event-planner-7514c.appspot.com\",\n  messagingSenderId: \"493811473479\",\n  appId: \"1:493811473479:web:3e473e45182a3cbdf3a562\",\n  measurementId: \"G-D0W72T4FD7\"\n};\nvar app = initializeApp(firebaseConfig);\nvar Stack = createStackNavigator();\nvar App = function App() {\n  useEffect(function () {}, []);\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Events\",\n        component: Events\n      }), _jsx(Stack.Screen, {\n        name: \"Login Or Register\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: Register\n      }), _jsx(Stack.Screen, {\n        name: \"LogIn\",\n        component: LogIn\n      }), _jsx(Stack.Screen, {\n        name: \"Message\",\n        component: Message\n      })]\n    }), _jsx(TabNavigator, {})]\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","View","Text","initializeApp","getAnalytics","HomeScreen","Register","LogIn","Events","Message","NavigationContainer","createStackNavigator","TabNavigator","jsx","_jsx","jsxs","_jsxs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","Stack","App","children","Navigator","Screen","name","component"],"sources":["C:/Users/Onur/event-planner/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport HomeScreen from './screens/HomeScreen';\nimport Register from './screens/Register';\nimport LogIn from './screens/LogIn';\nimport Events from './screens/Events/Events'\nimport Message from './screens/Message/Message'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport TabNavigator from './components/TabNavigator';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD8GM7Uhgu953-1Kuk8bWirSIrZ3YV2Pfo\",\n  authDomain: \"event-planner-7514c.firebaseapp.com\",\n  projectId: \"event-planner-7514c\",\n  storageBucket: \"event-planner-7514c.appspot.com\",\n  messagingSenderId: \"493811473479\",\n  appId: \"1:493811473479:web:3e473e45182a3cbdf3a562\",\n  measurementId: \"G-D0W72T4FD7\"\n};\n\nconst app = initializeApp(firebaseConfig);\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  useEffect(() => {\n    // Your Firebase code that depends on initialization, such as setting up listeners or initializing other Firebase services\n  }, []);\n\n  return (\n\n    <NavigationContainer>\n    <Stack.Navigator> \n      <Stack.Screen name=\"Events\" component={Events} />\n    <Stack.Screen name=\"Login Or Register\" component={HomeScreen} />\n    <Stack.Screen name=\"Register\" component={Register} /> \n    <Stack.Screen name=\"LogIn\" component={LogIn} /> \n    <Stack.Screen name=\"Message\" component={Message} /> \n\n    </Stack.Navigator>\n    \n    <TabNavigator />\n\n  </NavigationContainer>\n  \n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEzC,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AACf,OAAOC,KAAK;AACZ,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,YAAY;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,qCAAqC;EACjDC,SAAS,EAAE,qBAAqB;EAChCC,aAAa,EAAE,iCAAiC;EAChDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,IAAMC,GAAG,GAAGtB,aAAa,CAACc,cAAc,CAAC;AAEzC,IAAMS,KAAK,GAAGf,oBAAoB,CAAC,CAAC;AAEpC,IAAMgB,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB3B,SAAS,CAAC,YAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,OAEEgB,KAAA,CAACN,mBAAmB;IAAAkB,QAAA,GACpBZ,KAAA,CAACU,KAAK,CAACG,SAAS;MAAAD,QAAA,GACdd,IAAA,CAACY,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAExB;MAAO,CAAE,CAAC,EACnDM,IAAA,CAACY,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,mBAAmB;QAACC,SAAS,EAAE3B;MAAW,CAAE,CAAC,EAChES,IAAA,CAACY,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAE1B;MAAS,CAAE,CAAC,EACrDQ,IAAA,CAACY,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAEzB;MAAM,CAAE,CAAC,EAC/CO,IAAA,CAACY,KAAK,CAACI,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEvB;MAAQ,CAAE,CAAC;IAAA,CAElC,CAAC,EAElBK,IAAA,CAACF,YAAY,IAAE,CAAC;EAAA,CAEG,CAAC;AAGxB,CAAC;AAED,eAAee,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}