{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport Register from \"./screens/Register\";\nimport LogIn from \"./screens/LogIn\";\nimport Events from \"./screens/Events/Events\";\nimport Message from \"./screens/Message/Message\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport CreateEventScreen from \"./screens/CreateEvent/CreateEvent\";\nimport ProfileScreen from \"./screens/Profile/Profile\";\nimport FireStoreTRY from \"./screens/Firestore/FireStore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TabNavigator = function TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"Events\",\n      component: Events\n    }), _jsx(Tab.Screen, {\n      name: \"Create Event\",\n      component: CreateEventScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    }), _jsx(Tab.Screen, {\n      name: \"FireStoreTRY\",\n      component: FireStoreTRY\n    })]\n  });\n};\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar App = function App() {\n  useEffect(function () {}, []);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"HomeScreen\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: Register\n      }), _jsx(Stack.Screen, {\n        name: \"LogIn\",\n        component: LogIn\n      }), _jsx(Stack.Screen, {\n        name: \"MainPage\",\n        component: TabNavigator\n      }), _jsx(Stack.Screen, {\n        name: \"Message\",\n        component: Message\n      })]\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","View","Text","initializeApp","getAnalytics","HomeScreen","Register","LogIn","Events","Message","NavigationContainer","createStackNavigator","createBottomTabNavigator","AntDesign","MaterialIcons","CreateEventScreen","ProfileScreen","FireStoreTRY","jsx","_jsx","jsxs","_jsxs","TabNavigator","Tab","Navigator","children","Screen","name","component","Stack","App","screenOptions","headerShown"],"sources":["C:/Users/Onur/event-planner/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { View, Text } from 'react-native';\nimport { initializeApp } from 'firebase/app';\nimport { getAnalytics } from 'firebase/analytics';\nimport HomeScreen from './screens/HomeScreen';\nimport Register from './screens/Register';\nimport LogIn from './screens/LogIn';\nimport Events from './screens/Events/Events'\nimport Message from './screens/Message/Message'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport CreateEventScreen from './screens/CreateEvent/CreateEvent';\nimport ProfileScreen from './screens/Profile/Profile';\nimport FireStoreTRY from './screens/Firestore/FireStore'\n\n\nconst TabNavigator = () => {\n  return (\n \n      <Tab.Navigator>\n        <Tab.Screen name=\"Events\" component={Events} />\n        <Tab.Screen name=\"Create Event\" component={CreateEventScreen} />\n        <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n        <Tab.Screen name=\"FireStoreTRY\" component={FireStoreTRY} />\n      </Tab.Navigator>\n \n\n  );\n};\n\n\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst App = () => {\n  useEffect(() => {\n    // Your Firebase code that depends on initialization, such as setting up listeners or initializing other Firebase services\n  }, []);\n\n  return (\n    <NavigationContainer>\n    <Stack.Navigator screenOptions={{headerShown: false}}> \n    <Stack.Screen name=\"HomeScreen\" component={HomeScreen} />\n    <Stack.Screen name=\"Register\" component={Register} /> \n    <Stack.Screen name=\"LogIn\" component={LogIn} /> \n    <Stack.Screen name=\"MainPage\" component={TabNavigator} />\n    <Stack.Screen name=\"Message\" component={Message} /> \n  </Stack.Navigator>\n   </NavigationContainer>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAEzC,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,UAAU;AACjB,OAAOC,QAAQ;AACf,OAAOC,KAAK;AACZ,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,SAAS,EAAEC,aAAa,QAAQ,oBAAoB;AAC7D,OAAOC,iBAAiB;AACxB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxD,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACzB,OAEID,KAAA,CAACE,GAAG,CAACC,SAAS;IAAAC,QAAA,GACZN,IAAA,CAACI,GAAG,CAACG,MAAM;MAACC,IAAI,EAAC,QAAQ;MAACC,SAAS,EAAEpB;IAAO,CAAE,CAAC,EAC/CW,IAAA,CAACI,GAAG,CAACG,MAAM;MAACC,IAAI,EAAC,cAAc;MAACC,SAAS,EAAEb;IAAkB,CAAE,CAAC,EAChEI,IAAA,CAACI,GAAG,CAACG,MAAM;MAACC,IAAI,EAAC,SAAS;MAACC,SAAS,EAAEZ;IAAc,CAAE,CAAC,EACvDG,IAAA,CAACI,GAAG,CAACG,MAAM;MAACC,IAAI,EAAC,cAAc;MAACC,SAAS,EAAEX;IAAa,CAAE,CAAC;EAAA,CAC9C,CAAC;AAItB,CAAC;AAID,IAAMY,KAAK,GAAGlB,oBAAoB,CAAC,CAAC;AACpC,IAAMY,GAAG,GAAGX,wBAAwB,CAAC,CAAC;AAEtC,IAAMkB,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB9B,SAAS,CAAC,YAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEmB,IAAA,CAACT,mBAAmB;IAAAe,QAAA,EACpBJ,KAAA,CAACQ,KAAK,CAACL,SAAS;MAACO,aAAa,EAAE;QAACC,WAAW,EAAE;MAAK,CAAE;MAAAP,QAAA,GACrDN,IAAA,CAACU,KAAK,CAACH,MAAM;QAACC,IAAI,EAAC,YAAY;QAACC,SAAS,EAAEvB;MAAW,CAAE,CAAC,EACzDc,IAAA,CAACU,KAAK,CAACH,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEtB;MAAS,CAAE,CAAC,EACrDa,IAAA,CAACU,KAAK,CAACH,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,SAAS,EAAErB;MAAM,CAAE,CAAC,EAC/CY,IAAA,CAACU,KAAK,CAACH,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEN;MAAa,CAAE,CAAC,EACzDH,IAAA,CAACU,KAAK,CAACH,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEnB;MAAQ,CAAE,CAAC;IAAA,CACpC;EAAC,CACI,CAAC;AAEzB,CAAC;AAED,eAAeqB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}